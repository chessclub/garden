<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
  <meta name="generator" content="Jekyll v4.1.1">
  <title>Admin Panel | Garden State Chess Club</title>
  <!-- CSS only -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
        integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">

  <!-- JS, Popper.js, and jQuery -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
          integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
          crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
          integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
          crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
          integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV"
          crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://use.typekit.net/lbf7zfs.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.14.0/css/all.css"
        integrity="sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc" crossorigin="anonymous">
  <link rel="canonical" href="https://getbootstrap.com/docs/4.5/examples/sign-in/">

  <!-- Favicons -->
  <link rel="apple-touch-icon" href="/docs/4.5/assets/img/favicons/apple-touch-icon.png" sizes="180x180">
  <link rel="icon" href="/docs/4.5/assets/img/favicons/favicon-32x32.png" sizes="32x32" type="image/png">
  <link rel="icon" href="/docs/4.5/assets/img/favicons/favicon-16x16.png" sizes="16x16" type="image/png">
  <link rel="manifest" href="/docs/4.5/assets/img/favicons/manifest.json">
  <link rel="mask-icon" href="/docs/4.5/assets/img/favicons/safari-pinned-tab.svg" color="#563d7c">
  <link rel="icon" href="/docs/4.5/assets/img/favicons/favicon.ico">
  <meta name="msapplication-config" content="/docs/4.5/assets/img/favicons/browserconfig.xml">

  <!-- Custom styles for this template -->
  <link href="/asset/css/core.css" rel="stylesheet">
  <link href="/asset/css/authorize.css" rel="stylesheet">
</head>
<body class="text-center">
<form id="form-authorize" disabled="disabled" method="get" action="{{authorizeUrl}}">
  <input name="scope" value="{{scope}}" type="hidden"/>
  <input name="redirect_uri" value="{{redirectUrl}}" type="hidden"/>
  <input name="client_id" value="{{clientId}}" type="hidden"/>
  <input name="response_type" value="{{responseType}}" type="hidden"/>
  <input id="form-authorize-state" name="state" type="hidden"/>
  <img class="mb-4" src="/asset/img/logo.svg" alt="" width="300" height="300">
  <h1>Access via <i class="fab fa-discord"></i> Discord:</h1>
  <button class="btn btn-lg btn-primary btn-block" type="submit">Authorize</button>
  <p class="text-muted">Developed by: <a href="https://puresalt.gg">Pure Salt Gaming</a></p>
</form>

<script>
  function generateRandomString() {
    const rand = Math.floor(Math.random() * 10);
    let randStr = '';

    for (let i = 0; i < 20 + rand; i++) {
      randStr += String.fromCharCode(33 + Math.floor(Math.random() * 94));
    }

    return randStr;
  }

  window.onload = () => {
    const fragment = new URLSearchParams(window.location.hash.slice(1));

    if (fragment.has("access_token")) {
      const urlState = fragment.get("state");
      const stateParameter = localStorage.getItem('stateParameter');
      if (stateParameter !== atob(decodeURIComponent(urlState))) {
        return console.log('You may have been clickjacked!');
      }

      const accessToken = fragment.get("access_token");
      const tokenType = fragment.get("token_type");

      fetch('https://discordapp.com/api/users/@me', {
        headers: {
          authorization: `${tokenType} ${accessToken}`
        }
      })
          .then(res => res.json())
          .then(response => {
            console.log(response);
            const {username, discriminator} = response;
            document.getElementById('info').innerText += ` ${username}#${discriminator}`;
          })
          .catch(console.error);
    } else {
      const randStr = generateRandomString();
      localStorage.setItem('stateParameter', randStr);

      document.getElementById('form-authorize-state').value = btoa(randStr);
      document.getElementById('form-authorize-state').disabled = '';
    }
  }
</script>
</body>
</html>
